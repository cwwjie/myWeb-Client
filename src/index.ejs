<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>曾杰杰-Rejiejay Web站</title>
</head>
<body>
  <div id="root">
    <canvas id="c"></canvas>
  </div>

  <script id="shader-fs" type="x-shader/x-fragment">
    #ifdef GL_ES
      precision highp float;
      #endif
    void main(void) {
      gl_FragColor = vec4(0.2, 0.3, 0.4, 1.0);
    }
  </script>
  
  <script id="shader-vs" type="x-shader/x-vertex">
    attribute vec3 vertexPosition;
  
    uniform mat4 modelViewMatrix;
    uniform mat4 perspectiveMatrix;
  
    void main(void) {
      gl_Position = perspectiveMatrix * modelViewMatrix * vec4(  vertexPosition, 1.0);
    }
  </script>
  <script>
  window.onload=loadScene;var canvas,gl,ratio,vertices,velocities,freqArr,cw,ch,colorLoc,thetaArr,velThetaArr,velRadArr,boldRateArr,drawType,numLines=40000;var target=[];var randomTargetXArr=[],randomTargetYArr=[];drawType=2;function loadScene(){ if (document.getElementById("c") === null) { return } canvas=docudocument.getElementById("c");gl=canvas.getContext("experimental-webgl");if(!gl){alert("There's no WebGL context available.");return}cw=window.innerWidth;ch=window.innerHeight;canvas.width=cw;canvas.height=ch;gl.viewport(0,0,canvas.width,canvas.height);var vertexShaderScript=document.getElementById("shader-vs");var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexShaderScript.text);gl.compileShader(vertexShader);if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){alert("Couldn't compile the vertex shader");gl.deleteShader(vertexShader);return}var fragmentShaderScript=document.getElementById("shader-fs");var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentShaderScript.text);gl.compileShader(fragmentShader);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){alert("Couldn't compile the fragment shader");gl.deleteShader(fragmentShader);return}gl.program=gl.createProgram();gl.attachShader(gl.program,vertexShader);gl.attachShader(gl.program,fragmentShader);gl.linkProgram(gl.program);if(!gl.getProgramParameter(gl.program,gl.LINK_STATUS)){alert("Unable to initialise shaders");gl.deleteProgram(gl.program);gl.deleteProgram(vertexShader);gl.deleteProgram(fragmentShader);return}gl.useProgram(gl.program);var vertexPosition=gl.getAttribLocation(gl.program,"vertexPosition");gl.enableVertexAttribArray(vertexPosition);gl.clearColor(0,0,0,1);gl.clearDepth(1);gl.enable(gl.BLEND);gl.disable(gl.DEPTH_TEST);gl.blendFunc(gl.SRC_ALPHA,gl.ONE);var vertexBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertexBuffer);setup();vertices=new Float32Array(vertices);velocities=new Float32Array(velocities);thetaArr=new Float32Array(thetaArr);velThetaArr=new Float32Array(velThetaArr);velRadArr=new Float32Array(velRadArr);gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.DYNAMIC_DRAW);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);var fieldOfView=30;var aspectRatio=canvas.width/canvas.height;var nearPlane=1;var farPlane=10000;var top=nearPlane*Math.tan(fieldOfView*Math.PI/360);var bottom=-top;var right=top*aspectRatio;var left=-right;var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=(farPlane+nearPlane)/(farPlane-nearPlane);var d=(2*farPlane*nearPlane)/(farPlane-nearPlane);var x=(2*nearPlane)/(right-left);var y=(2*nearPlane)/(top-bottom);var perspectiveMatrix=[x,0,a,0,0,y,b,0,0,0,c,d,0,0,-1,0];var modelViewMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];var vertexPosAttribLocation=gl.getAttribLocation(gl.program,"vertexPosition");gl.vertexAttribPointer(vertexPosAttribLocation,3,gl.FLOAT,false,0,0);var uModelViewMatrix=gl.getUniformLocation(gl.program,"modelViewMatrix");var uPerspectiveMatrix=gl.getUniformLocation(gl.program,"perspectiveMatrix");gl.uniformMatrix4fv(uModelViewMatrix,false,new Float32Array(perspectiveMatrix));gl.uniformMatrix4fv(uPerspectiveMatrix,false,new Float32Array(modelViewMatrix));animate();setTimeout(timer,1500)}var count=0;var cn=0;function animate(){requestAnimationFrame(animate);drawScene()}function drawScene(){draw();gl.lineWidth(1);gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.DYNAMIC_DRAW);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.drawArrays(gl.LINES,0,numLines);gl.flush()}function setup(){setup2()}function draw(){switch(drawType){case 0:draw0();break;case 1:draw1();break;case 2:draw2();break}}function setup1(){vertices=[];velThetaArr=[];velRadArr=[];ratio=cw/ch;velocities=[];for(var i=0;i<numLines;i++){var rad=Math.random()*2+0.5;var theta=Math.random()*Math.PI*2;var velTheta=Math.random()*Math.PI*2;vertices.push(rad*Math.cos(theta),rad*Math.sin(theta),1.83);vertices.push(rad*Math.cos(theta),rad*Math.sin(theta),1.83);velocities.push((Math.random()*2-1)*0.05,(Math.random()*2-1)*0.05,0.93+Math.random()*0.02);velThetaArr.push(velTheta);velRadArr.push(rad)}}function setup2(){vertices=[];velThetaArr=[];velRadArr=[];ratio=cw/ch;velocities=[];thetaArr=[];freqArr=[];boldRateArr=[];for(var ii=0;ii<numLines;ii++){var rad=(0.1+0.2*Math.random());var theta=Math.random()*Math.PI*2;var velTheta=Math.random()*Math.PI*2/30;var freq=Math.random()*0.12+0.03;var boldRate=Math.random()*0.04+0.01;var randomPosX=(Math.random()*2-1)*window.innerWidth/window.innerHeight;var randomPosY=Math.random()*2-1;vertices.push(rad*Math.cos(theta),rad*Math.sin(theta),1.83);vertices.push(rad*Math.cos(theta),rad*Math.sin(theta),1.83);thetaArr.push(theta);velThetaArr.push(velTheta);velRadArr.push(rad);freqArr.push(freq);boldRateArr.push(boldRate);randomTargetXArr.push(randomPosX);randomTargetYArr.push(randomPosY)}freqArr=new Float32Array(freqArr)}function draw0(){var i,n=vertices.length,p,bp;var px,py;var pTheta;var rad;var num;var targetX,targetY;for(i=0;i<numLines*2;i+=2){count+=0.3;bp=i*3;vertices[bp]=vertices[bp+3];
  vertices[bp+1]=vertices[bp+4];num=parseInt(i/2);targetX=randomTargetXArr[num];targetY=randomTargetYArr[num];px=vertices[bp+3];px+=(targetX-px)*(Math.random()*0.04+0.06);vertices[bp+3]=px;py=vertices[bp+4];py+=(targetY-py)*(Math.random()*0.04+0.06);vertices[bp+4]=py}}function draw1(){var i,n=vertices.length,p,bp;var px,py;var pTheta;var rad;var num;var targetX,targetY;for(i=0;i<numLines*2;i+=2){count+=0.3;bp=i*3;vertices[bp]=vertices[bp+3];vertices[bp+1]=vertices[bp+4];num=parseInt(i/2);pTheta=thetaArr[num];rad=velRadArr[num];pTheta=pTheta+velThetaArr[num];thetaArr[num]=pTheta;targetX=rad*Math.cos(pTheta);targetY=rad*Math.sin(pTheta);px=vertices[bp+3];px+=(targetX-px)*(Math.random()*0.1+0.1);vertices[bp+3]=px;py=vertices[bp+4];py+=(targetY-py)*(Math.random()*0.1+0.1);vertices[bp+4]=py}}function draw2(){cn+=0.1;var i,n=vertices.length,p,bp;var px,py;var pTheta;var rad;var num;for(i=0;i<numLines*2;i+=2){count+=0.3;bp=i*3;vertices[bp]=vertices[bp+3];vertices[bp+1]=vertices[bp+4];num=parseInt(i/2);pTheta=thetaArr[num];rad=velRadArr[num];pTheta=pTheta+velThetaArr[num];thetaArr[num]=pTheta;px=vertices[bp+3];px=rad*Math.cos(pTheta)*0.1+px;vertices[bp+3]=px;py=vertices[bp+4];py=py+rad*Math.sin(pTheta)*0.1;vertices[bp+4]=py}}function timer(){drawType=(drawType+1)%3;setTimeout(timer,1500)};
  </script>
</body>
</html>
